# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.2 on Tue Aug 21 13:46:28 2018
#

import wx
import os
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


os.environ["UBUNTU_MENUPROXY"] = "0"

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1194, 922))
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Import"), "")
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Export"), "")
        self.frame_menubar.Append(wxglade_tmp_menu, _("File"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Create"), "")
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Load"), "")
        self.frame_menubar.Append(wxglade_tmp_menu, _("Datasets"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Test single"), "")
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Test a folder"), "")
        self.frame_menubar.Append(wxglade_tmp_menu, _("Models"))
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        
        # Tool Bar
        self.frame_toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.frame_toolbar)
        self.frame_toolbar.AddLabelTool(wx.ID_ANY, _("New"), wx.Bitmap("/home/pirl/TensorflowGUI/icons/add.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Add"), "")
        self.frame_toolbar.AddLabelTool(wx.ID_ANY, _("Load"), wx.Bitmap("/home/pirl/TensorflowGUI/icons/upload.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Load"), "")
        self.frame_toolbar.AddLabelTool(wx.ID_ANY, _("Save"), wx.Bitmap("/home/pirl/TensorflowGUI/icons/diskette(1).png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Save"), "")
        self.frame_toolbar.AddLabelTool(wx.ID_ANY, _("Make a pretrained model"), wx.Bitmap("/home/pirl/TensorflowGUI/icons/3d-modeling.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Make a model"), "")
        self.frame_toolbar.AddLabelTool(wx.ID_ANY, _("Train"), wx.Bitmap("/home/pirl/TensorflowGUI/icons/play(1).png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Train"), "")
        self.frame_toolbar.AddLabelTool(wx.ID_ANY, _("Classify one"), wx.Bitmap("/home/pirl/TensorflowGUI/icons/background.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Classify one"), "")
        self.frame_toolbar.AddLabelTool(wx.ID_ANY, _("Classify many"), wx.Bitmap("/home/pirl/TensorflowGUI/icons/image.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Classify many"), "")
        # Tool Bar end
        # TreeCtrl
        self.tree_ctrl_1 = wx.TreeCtrl(self, wx.ID_ANY, style=wx.BORDER_SUNKEN | wx.TR_HAS_BUTTONS)
        tree1_root = self.tree_ctrl_1.AddRoot('Model')
        self.tree_ctrl_1.AppendItem(tree1_root, 'logistic')
        self.tree_ctrl_1.AppendItem(tree1_root, 'VGG')
        self.tree_ctrl_2 = wx.TreeCtrl(self, wx.ID_ANY, style=wx.BORDER_SUNKEN | wx.TR_HAS_BUTTONS)
        tree2_root = self.tree_ctrl_2.AddRoot('Dataset')
        self.tree_ctrl_2.AppendItem(tree2_root, 'MNIST')
        self.tree_ctrl_2.AppendItem(tree2_root, 'CIFAR10')
        # TreeCtrl end
        self.notebook_1 = wx.Notebook(self, wx.ID_ANY)
        self.notebook_1_pane_1 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.text_ctrl_2 = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
        self.text_ctrl_3 = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
        self.text_ctrl_4 = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
        self.text_ctrl_5 = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
        self.text_ctrl_6 = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
        self.combo_box_1 = wx.ComboBox(self.notebook_1_pane_1, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.text_ctrl_8 = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
        self.text_ctrl_7 = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
        self.notebook_1_ModelSpec = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.text_ctrl_9 = wx.TextCtrl(self.notebook_1_ModelSpec, wx.ID_ANY, "")
        self.text_ctrl_10 = wx.TextCtrl(self.notebook_1_ModelSpec, wx.ID_ANY, "")
        self.text_ctrl_11 = wx.TextCtrl(self.notebook_1_ModelSpec, wx.ID_ANY, "")
        self.text_ctrl_13 = wx.TextCtrl(self.notebook_1_ModelSpec, wx.ID_ANY, "")
        self.text_ctrl_12 = wx.TextCtrl(self.notebook_1_ModelSpec, wx.ID_ANY, "")
        self.notebook_1_Makeamodel = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.text_ctrl_14 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.text_ctrl_19 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.text_ctrl_15 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.text_ctrl_20 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.text_ctrl_16 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.text_ctrl_21 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.text_ctrl_17 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.text_ctrl_22 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.text_ctrl_18 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.text_ctrl_23 = wx.TextCtrl(self.notebook_1_Makeamodel, wx.ID_ANY, "")
        self.notebook_1_Testmodelsindleimage = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.button_1 = wx.Button(self.notebook_1_Testmodelsindleimage, wx.ID_ANY, _("Browse"))
        self.text_ctrl_24 = wx.TextCtrl(self.notebook_1_Testmodelsindleimage, wx.ID_ANY, "")
        self.notebook_1_Testmodelimagefolder = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.button_2 = wx.Button(self.notebook_1_Testmodelimagefolder, wx.ID_ANY, _("Browse"))
        self.text_ctrl_25 = wx.TextCtrl(self.notebook_1_Testmodelimagefolder, wx.ID_ANY, "")
        self.text_ctrl_26 = wx.TextCtrl(self.notebook_1_Testmodelimagefolder, wx.ID_ANY, "")
        self.text_ctrl_27 = wx.TextCtrl(self.notebook_1_Testmodelimagefolder, wx.ID_ANY, "")
        self.text_ctrl_1 = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.HSCROLL | wx.TE_LEFT | wx.TE_MULTILINE | wx.TE_READONLY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("Tensorflow GUI"))
        self.frame_toolbar.Realize()
        self.text_ctrl_1.SetBackgroundColour(wx.Colour(235, 235, 235))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_5 = wx.GridBagSizer(0, 0)
        grid_sizer_4 = wx.GridBagSizer(0, 0)
        grid_sizer_3 = wx.GridBagSizer(0, 0)
        grid_sizer_2 = wx.GridBagSizer(5, 5)
        grid_sizer_1 = wx.GridBagSizer(5, 5)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_3.Add(self.tree_ctrl_1, 1, wx.EXPAND, 0)
        sizer_3.Add(self.tree_ctrl_2, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_3, 2, wx.EXPAND, 0)
        label_1 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Dataset Path"), style=wx.ALIGN_LEFT)
        label_1.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_1.Add(label_1, (1, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.text_ctrl_2, (1, 8), (1, 27), wx.EXPAND | wx.RIGHT, 20)
        label_2 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Number of Classes"), style=wx.ALIGN_LEFT)
        label_2.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_1.Add(label_2, (2, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.text_ctrl_3, (2, 8), (1, 27), wx.EXPAND | wx.RIGHT, 20)
        label_3 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Number of Images"), style=wx.ALIGN_CENTER | wx.ALIGN_LEFT)
        label_3.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_1.Add(label_3, (3, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.text_ctrl_4, (3, 8), (1, 27), wx.EXPAND | wx.RIGHT, 20)
        label_4 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Image Size"), style=wx.ALIGN_CENTER | wx.ALIGN_LEFT)
        label_4.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_1.Add(label_4, (4, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.text_ctrl_5, (4, 8), (1, 13), wx.EXPAND | wx.RIGHT, 0)
        label_7 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("X"))
        grid_sizer_1.Add(label_7, (4, 21), (1, 1), wx.ALIGN_CENTER, 0)
        grid_sizer_1.Add(self.text_ctrl_6, (4, 22), (1, 13), wx.EXPAND | wx.RIGHT, 20)
        label_5 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Image Type"), style=wx.ALIGN_CENTER | wx.ALIGN_LEFT)
        label_5.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_1.Add(label_5, (5, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.combo_box_1, (5, 8), (1, 27), wx.EXPAND | wx.RIGHT, 20)
        label_6 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("% of Testing"), style=wx.ALIGN_CENTER | wx.ALIGN_LEFT)
        label_6.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_1.Add(label_6, (6, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.text_ctrl_8, (6, 8), (1, 27), wx.EXPAND | wx.RIGHT, 20)
        label_8 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Maximum Samples per Class"), style=wx.ALIGN_LEFT)
        label_8.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_1.Add(label_8, (7, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.text_ctrl_7, (7, 8), (1, 27), wx.EXPAND | wx.RIGHT, 20)
        self.notebook_1_pane_1.SetSizer(grid_sizer_1)
#        grid_sizer_1.AddGrowableRow(18)
        grid_sizer_1.AddGrowableCol(8)
        grid_sizer_1.AddGrowableCol(22)
        label_9 = wx.StaticText(self.notebook_1_ModelSpec, wx.ID_ANY, _("Network Type"), style=wx.ALIGN_LEFT)
        label_9.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_2.Add(label_9, (1, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.text_ctrl_9, (1, 8), (1, 27), wx.EXPAND | wx.RIGHT, 20)
        label_10 = wx.StaticText(self.notebook_1_ModelSpec, wx.ID_ANY, _("Number of Layers"), style=wx.ALIGN_LEFT)
        label_10.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_2.Add(label_10, (2, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.text_ctrl_10, (2, 8), (1, 27), wx.EXPAND | wx.RIGHT, 20)
        label_11 = wx.StaticText(self.notebook_1_ModelSpec, wx.ID_ANY, _("Image Size"), style=wx.ALIGN_LEFT)
        label_11.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_2.Add(label_11, (3, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.text_ctrl_11, (3, 8), (1, 13), wx.EXPAND, 0)
        label_13 = wx.StaticText(self.notebook_1_ModelSpec, wx.ID_ANY, _("X"), style=wx.ALIGN_CENTER)
        grid_sizer_2.Add(label_13, (3, 21), (1, 1), wx.ALIGN_CENTER, 0)
        grid_sizer_2.Add(self.text_ctrl_13, (3, 22), (1, 13), wx.EXPAND | wx.RIGHT, 20)
        label_12 = wx.StaticText(self.notebook_1_ModelSpec, wx.ID_ANY, _("Number of Classes   "))
        label_12.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_2.Add(label_12, (4, 1), (1, 6), wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.text_ctrl_12, (4, 8), (1, 27), wx.EXPAND | wx.RIGHT, 20)
        self.notebook_1_ModelSpec.SetSizer(grid_sizer_2)
#        grid_sizer_2.AddGrowableRow(18)
        grid_sizer_2.AddGrowableCol(8)
        grid_sizer_2.AddGrowableCol(22)
        label_14 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Model select"))
        label_14.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_14, (1, 1), (1, 10), 0, 0)
        label_19 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Sanpshot interval(in epochs)"))
        label_19.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_19, (1, 21), (1, 10), 0, 0)
        grid_sizer_3.Add(self.text_ctrl_14, (2, 1), (1, 18), wx.EXPAND, 0)
        grid_sizer_3.Add(self.text_ctrl_19, (2, 21), (1, 18), wx.EXPAND | wx.RIGHT, 30)
        label_15 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Checkpoint name"))
        label_15.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_15, (4, 1), (1, 10), 0, 0)
        label_20 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Solver type"))
        label_20.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_20, (4, 21), (1, 10), 0, 0)
        grid_sizer_3.Add(self.text_ctrl_15, (5, 1), (1, 18), wx.EXPAND, 0)
        grid_sizer_3.Add(self.text_ctrl_20, (5, 21), (1, 18), wx.EXPAND | wx.RIGHT, 30)
        label_16 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Training epochs"))
        label_16.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_16, (7, 1), (1, 10), 0, 0)
        label_21 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Base Learning rate"))
        label_21.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_21, (7, 21), (1, 10), 0, 0)
        grid_sizer_3.Add(self.text_ctrl_16, (8, 1), (1, 18), wx.EXPAND, 0)
        grid_sizer_3.Add(self.text_ctrl_21, (8, 21), (1, 18), wx.EXPAND | wx.RIGHT, 30)
        label_17 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Dataset name"))
        label_17.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_17, (10, 1), (1, 10), 0, 0)
        label_22 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Random seed"))
        label_22.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_22, (10, 21), (1, 10), 0, 0)
        grid_sizer_3.Add(self.text_ctrl_17, (11, 1), (1, 18), wx.EXPAND, 0)
        grid_sizer_3.Add(self.text_ctrl_22, (11, 21), (1, 18), wx.EXPAND | wx.RIGHT, 30)
        label_18 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Batch size"))
        label_18.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_18, (13, 1), (1, 10), 0, 0)
        label_23 = wx.StaticText(self.notebook_1_Makeamodel, wx.ID_ANY, _("Select which GPU[s] you would like to use"))
        label_23.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_3.Add(label_23, (13, 21), (1, 10), 0, 0)
        grid_sizer_3.Add(self.text_ctrl_18, (14, 1), (1, 18), wx.EXPAND, 0)
        grid_sizer_3.Add(self.text_ctrl_23, (14, 21), (1, 18), wx.EXPAND | wx.RIGHT, 30)
        self.notebook_1_Makeamodel.SetSizer(grid_sizer_3)
#        grid_sizer_3.AddGrowableRow(18)
        grid_sizer_3.AddGrowableCol(1)
        grid_sizer_3.AddGrowableCol(21)
        label_24 = wx.StaticText(self.notebook_1_Testmodelsindleimage, wx.ID_ANY, _("Upload image"))
        label_24.SetFont(wx.Font(15, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        grid_sizer_4.Add(label_24, (1, 1), (1, 8), 0, 0)
        grid_sizer_4.Add(self.button_1, (3, 1), (1, 4), 0, 0)
        grid_sizer_4.Add(self.text_ctrl_24, (3, 5), (1, 21), wx.EXPAND | wx.RIGHT, 30)
        self.notebook_1_Testmodelsindleimage.SetSizer(grid_sizer_4)
#        grid_sizer_4.AddGrowableRow(18)
        grid_sizer_4.AddGrowableCol(25)
#        grid_sizer_4.AddGrowableCol(26)
#        grid_sizer_4.AddGrowableCol(27)
        label_25 = wx.StaticText(self.notebook_1_Testmodelimagefolder, wx.ID_ANY, _("Upload folder"))
        label_25.SetFont(wx.Font(15, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        grid_sizer_5.Add(label_25, (1, 1), (1, 8), 0, 0)
        grid_sizer_5.Add(self.button_2, (3, 1), (1, 4), 0, 0)
        grid_sizer_5.Add(self.text_ctrl_25, (3, 5), (1, 21), wx.EXPAND | wx.RIGHT, 30)
        label_26 = wx.StaticText(self.notebook_1_Testmodelimagefolder, wx.ID_ANY, _("Number of images use from the file"))
        label_26.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_5.Add(label_26, (5, 1), (1, 11), 0, 0)
        grid_sizer_5.Add(self.text_ctrl_26, (6, 1), (1, 25), wx.EXPAND | wx.RIGHT, 30)
        label_27 = wx.StaticText(self.notebook_1_Testmodelimagefolder, wx.ID_ANY, _("Leave blank to use all"))
        label_27.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.LIGHT, 0, ""))
        grid_sizer_5.Add(label_27, (7, 1), (1, 8), 0, 0)
        label_28 = wx.StaticText(self.notebook_1_Testmodelimagefolder, wx.ID_ANY, _("Number of images to show per category"))
        label_28.SetFont(wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        grid_sizer_5.Add(label_28, (9, 1), (1, 14), 0, 0)
        grid_sizer_5.Add(self.text_ctrl_27, (10, 1), (1, 25), wx.EXPAND | wx.RIGHT, 30)
        self.notebook_1_Testmodelimagefolder.SetSizer(grid_sizer_5)
#        grid_sizer_5.AddGrowableRow(18)
        grid_sizer_5.AddGrowableCol(25)
#        grid_sizer_5.AddGrowableCol(26)
#        grid_sizer_5.AddGrowableCol(27)
        self.notebook_1.AddPage(self.notebook_1_pane_1, _("Dataset Spec"))
        self.notebook_1.AddPage(self.notebook_1_ModelSpec, _("Model Spec"))
        self.notebook_1.AddPage(self.notebook_1_Makeamodel, _("Make a model"))
        self.notebook_1.AddPage(self.notebook_1_Testmodelsindleimage, _("Test model(sindle image)"))
        self.notebook_1.AddPage(self.notebook_1_Testmodelimagefolder, _("Test model(image folder)"))
        sizer_2.Add(self.notebook_1, 5, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 4, wx.EXPAND, 0)
        sizer_1.Add(self.text_ctrl_1, 2, wx.ALL | wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

# end of class MyFrame
