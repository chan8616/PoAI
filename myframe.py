# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.2 on Tue Aug 21 13:46:28 2018
#

import wx
import wx.aui
import os
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade
from mynotebook import MyNotebook


os.environ["UBUNTU_MENUPROXY"] = "0"

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1194, 922))
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Import"), "")
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Export"), "")
        self.frame_menubar.Append(wxglade_tmp_menu, _("File"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Create"), "")
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Load"), "")
        self.frame_menubar.Append(wxglade_tmp_menu, _("Datasets"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Test single"), "")
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Test a folder"), "")
        self.frame_menubar.Append(wxglade_tmp_menu, _("Models"))
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        
        # Tool Bar
        self.tool_bar = wx.ToolBar(self, wx.ID_ANY)
        self.SetToolBar(self.tool_bar)
        self.tool_new = self.tool_bar.AddTool(1, _("New"), wx.Bitmap("./icons/add.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Add"), "")
        self.tool_load = self.tool_bar.AddTool(2, _("Load"), wx.Bitmap("./icons/upload.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Load"), "")
        self.tool_save = self.tool_bar.AddTool(3, _("Save"), wx.Bitmap("./icons/diskette(1).png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Save"), "")
        self.tool_bar.AddSeparator()
        self.tool_train_spec = self.tool_bar.AddTool(4, _("Make a pretrained model"), wx.Bitmap("./icons/3d-modeling.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Make a model"), "")
        self.tool_train_start = self.tool_bar.AddTool(5, _("Train"), wx.Bitmap("./icons/play(1).png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Train"), "")
        self.tool_bar.AddSeparator()
        self.tool_test = self.tool_bar.AddTool(6, _("Classify one"), wx.Bitmap("./icons/background.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Classify one"), "")
        self.tool_bar.AddTool(wx.ID_ANY, _("Classify many"), wx.Bitmap("./icons/image.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, _("Classify many"), "")
        # Tool Bar end

        # TreeCtrl
        self.tree_ctrl_1 = wx.TreeCtrl(self, wx.ID_ANY)#, style=wx.BORDER_SUNKEN | wx.TR_HAS_BUTTONS)
        self.tree_ctrl_2 = wx.TreeCtrl(self, wx.ID_ANY)#, style=wx.BORDER_SUNKEN | wx.TR_HAS_BUTTONS)
        # TreeCtrl end

        # AuiNotebook
        self.notebook_1 = MyNotebook(self, wx.ID_ANY)
        # AuiNotebook end

        # log window
        self.text_ctrl_1 = wx.TextCtrl(self, wx.ID_ANY, "log\n", style=wx.HSCROLL | wx.TE_LEFT | wx.TE_MULTILINE | wx.TE_READONLY)
        # log window end

        self.__set_properties()
        self.__do_layout()
        # end wxGlade


    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("Tensorflow GUI"))
        self.tool_bar.Realize()
        self.text_ctrl_1.SetBackgroundColour(wx.Colour(235, 235, 235))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_3.Add(self.tree_ctrl_1, 1, wx.EXPAND | wx.BOTTOM, 5)
        sizer_3.Add(self.tree_ctrl_2, 1, wx.EXPAND | wx.TOP, 5)
        sizer_2.Add(sizer_3, 2, wx.EXPAND, 0)
        sizer_2.Add(self.notebook_1, 5, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 4, wx.EXPAND, 0)
        sizer_1.Add(self.text_ctrl_1, 2, wx.ALL | wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade


# end of class MyFrame
