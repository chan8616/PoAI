!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DATA_PROVIDER	utils/data.py	/^class DATA_PROVIDER(object):$/;"	c
DATA_TYPE	gui/run.py	/^DATA_TYPE = ('I', 'P', "T") # Image, Point, Time-series$/;"	v
DataSpecPage	gui/mynotebook.py	/^class DataSpecPage(wx.Panel):$/;"	c
DatasetSelected	gui/mynotebook.py	/^    def DatasetSelected(self):$/;"	m	class:TrainSpecPage
FILE_FORMAT	model/ops.py	/^FILE_FORMAT = ['jpg', 'jpeg', 'png', 'bmp']$/;"	v
FLAGS	main.py	/^FLAGS = flags.FLAGS$/;"	v
IMAGE_SIZE	gui/run.py	/^IMAGE_SIZE = 224      # Fixed$/;"	v
IMG_MODEL	gui/run.py	/^IMG_MODEL = ('logistic', 'res152', 'vgg19')$/;"	v
LOGISTIC	model/simple.py	/^class LOGISTIC(NET):$/;"	c
LSTM	model/lstm.py	/^class LSTM(NET):$/;"	c
LossHistory	utils/util.py	/^class LossHistory(tf.keras.callbacks.Callback):$/;"	c
MODEL	gui/run.py	/^MODEL = {'logistic':LOGISTIC, 'res152':RESNET152, 'vgg19':VGGNET19,$/;"	v
ModelSelected	gui/mynotebook.py	/^    def ModelSelected(self):$/;"	m	class:TrainSpecPage
ModelSpecPage	gui/mynotebook.py	/^class ModelSpecPage(wx.Panel):$/;"	c
MyApp	gui/app.py	/^class MyApp(wx.App):$/;"	c
MyApp	test.py	/^class MyApp(wx.App):$/;"	c
MyFrame	gui/myframe.py	/^class MyFrame(wx.Frame):$/;"	c
MyFrame	test.py	/^class MyFrame(wx.Frame):$/;"	c
MyFrameEvent	test.py	/^class MyFrameEvent(MyFrame):$/;"	c
MyNotebook	gui/mynotebook.py	/^class MyNotebook(wx.lib.agw.aui.auibook.AuiNotebook):$/;"	c
NET	model/model.py	/^class NET(object):$/;"	c
OPEN_DATA	gui/run.py	/^OPEN_DATA = {'mnist':call_mnist,$/;"	v
OPEN_IMG	gui/run.py	/^OPEN_IMG = ('mnist', 'cifar10')$/;"	v
OPEN_PIT	gui/run.py	/^OPEN_PIT = ('wine', 'iris')$/;"	v
OPEN_TMS	gui/run.py	/^OPEN_TMS = ('bearing')$/;"	v
OPTIMIZER	gui/run.py	/^OPTIMIZER = {'adam':keras.optimizers.Adam,$/;"	v
OnCheckpointnameSelected	gui/mynotebook.py	/^    def OnCheckpointnameSelected(self, event):$/;"	m	class:TrainSpecPage
OnClose	test.py	/^    def OnClose(self, event):$/;"	m	class:MyFrameEvent
OnClosed	gui/myframe.py	/^    def OnClosed(self, event):$/;"	m	class:MyFrame
OnDataSpec	gui/myframe.py	/^    def OnDataSpec(self, item):$/;"	m	class:MyFrame
OnDatasetSelect	gui/mynotebook.py	/^    def OnDatasetSelect(self, event):$/;"	m	class:TrainSpecPage
OnDirDialog	gui/mynotebook.py	/^    def OnDirDialog(self, event):$/;"	m	class:TestSpecPage
OnFileDialog	gui/mynotebook.py	/^    def OnFileDialog(self, event):$/;"	m	class:TestSpecPage
OnInit	gui/app.py	/^    def OnInit(self):$/;"	m	class:MyApp
OnInit	test.py	/^    def OnInit(self):$/;"	m	class:MyApp
OnLoad	gui/myframe.py	/^    def OnLoad(self, event):$/;"	m	class:MyFrame
OnModelSelect	gui/mynotebook.py	/^    def OnModelSelect(self, event):$/;"	m	class:TrainSpecPage
OnModelSpec	gui/myframe.py	/^    def OnModelSpec(self, item):$/;"	m	class:MyFrame
OnNew	gui/myframe.py	/^    def OnNew(self, event):$/;"	m	class:MyFrame
OnPageChanged	gui/myframe.py	/^    def OnPageChanged(self, event):$/;"	m	class:MyFrame
OnRun	gui/myframe.py	/^    def OnRun(self, event):$/;"	m	class:MyFrame
OnSave	gui/myframe.py	/^    def OnSave(self, event):$/;"	m	class:MyFrame
OnTestSpec	gui/myframe.py	/^    def OnTestSpec(self, event):$/;"	m	class:MyFrame
OnToolBar	gui/myframe.py	/^    def OnToolBar(self, event):$/;"	m	class:MyFrame
OnTrainSpec	gui/myframe.py	/^    def OnTrainSpec(self, event):$/;"	m	class:MyFrame
OnTrainedSpec	gui/myframe.py	/^    def OnTrainedSpec(self, item):$/;"	m	class:MyFrame
PIT_MODEL	gui/run.py	/^PIT_MODEL = ('logistic','svm','randomforest')$/;"	v
RESNET152	model/resnet.py	/^class RESNET152(NET):$/;"	c
RF	model/rf.py	/^class RF(NET):$/;"	c
Redirection	utils/util.py	/^class Redirection(object):$/;"	c
ResNet152	model/resnet.py	/^def ResNet152(include_top=True, weights=None,$/;"	f
Run	gui/run.py	/^class Run(object):$/;"	c
SVM	model/svm.py	/^class SVM(NET):$/;"	c
Scale	model/resnet.py	/^class Scale(Layer):$/;"	c
SetCheckpoint	gui/mynotebook.py	/^    def SetCheckpoint(self, model_name):$/;"	m	class:TrainSpecPage
SetCheckpointname	gui/mynotebook.py	/^    def SetCheckpointname(self):$/;"	m	class:TrainSpecPage
TMS_MODEL	gui/run.py	/^TMS_MODEL = ('lstm','gru','ae_lstm')$/;"	v
TestSpecPage	gui/mynotebook.py	/^class TestSpecPage(wx.Panel):$/;"	c
TrainSpecPage	gui/mynotebook.py	/^class TrainSpecPage(wx.Panel):$/;"	c
VGGNET19	model/vgg19.py	/^class VGGNET19(NET):$/;"	c
WEIGHTS_PATH	model/resnet.py	/^WEIGHTS_PATH = 'https:\/\/github.com\/adamcasson\/resnet152\/releases\/download\/v0.1\/resnet152_weights_tf.h5'$/;"	v
WEIGHTS_PATH_NO_TOP	model/resnet.py	/^WEIGHTS_PATH_NO_TOP = 'https:\/\/github.com\/adamcasson\/resnet152\/releases\/download\/v0.1\/resnet152_weights_tf_notop.h5'$/;"	v
_	gui/myframe.py	/^_ = gettext.gettext$/;"	v
_	gui/mynotebook.py	/^_ = gettext.gettext$/;"	v
__call__	model/model.py	/^    def __call__(self):$/;"	m	class:NET	file:
__call__	utils/data.py	/^    def __call__(self,$/;"	m	class:DATA_PROVIDER	file:
__do_binds	gui/myframe.py	/^    def __do_binds(self):$/;"	m	class:MyFrame	file:
__do_binds	gui/mynotebook.py	/^    def __do_binds(self):$/;"	m	class:TestSpecPage	file:
__do_binds	gui/mynotebook.py	/^    def __do_binds(self):$/;"	m	class:TrainSpecPage	file:
__do_layout	gui/myframe.py	/^    def __do_layout(self):$/;"	m	class:MyFrame	file:
__do_layout	gui/mynotebook.py	/^    def __do_layout(self):$/;"	m	class:DataSpecPage	file:
__do_layout	gui/mynotebook.py	/^    def __do_layout(self):$/;"	m	class:ModelSpecPage	file:
__do_layout	gui/mynotebook.py	/^    def __do_layout(self):$/;"	m	class:MyNotebook	file:
__do_layout	gui/mynotebook.py	/^    def __do_layout(self):$/;"	m	class:TestSpecPage	file:
__do_layout	gui/mynotebook.py	/^    def __do_layout(self):$/;"	m	class:TrainSpecPage	file:
__init__	gui/myframe.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:MyFrame
__init__	gui/mynotebook.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:MyNotebook
__init__	gui/mynotebook.py	/^    def __init__(self, parent, id):$/;"	m	class:DataSpecPage
__init__	gui/mynotebook.py	/^    def __init__(self, parent, id):$/;"	m	class:ModelSpecPage
__init__	gui/mynotebook.py	/^    def __init__(self, parent, id):$/;"	m	class:TestSpecPage
__init__	gui/mynotebook.py	/^    def __init__(self, parent, id):$/;"	m	class:TrainSpecPage
__init__	gui/run.py	/^    def __init__(self,$/;"	m	class:Run
__init__	model/lstm.py	/^    def __init__(self, **kargs):$/;"	m	class:LSTM
__init__	model/model.py	/^    def __init__(self,$/;"	m	class:NET
__init__	model/resnet.py	/^    def __init__(self, **kargs):$/;"	m	class:RESNET152
__init__	model/resnet.py	/^    def __init__(self, weights=None, axis=-1, momentum = 0.9, beta_init='zero', gamma_init='one', **kwargs):$/;"	m	class:Scale
__init__	model/rf.py	/^    def __init__(self,$/;"	m	class:RF
__init__	model/simple.py	/^    def __init__(self, **kargs):$/;"	m	class:LOGISTIC
__init__	model/svm.py	/^    def __init__(self,$/;"	m	class:SVM
__init__	model/vgg19.py	/^    def __init__(self, **kargs):$/;"	m	class:VGGNET19
__init__	test.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:MyFrame
__init__	test.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:MyFrameEvent
__init__	utils/data.py	/^    def __init__(self,$/;"	m	class:DATA_PROVIDER
__init__	utils/util.py	/^    def __init__(self, log_area):$/;"	m	class:Redirection
__init__	utils/util.py	/^    def __init__(self, model_name, batch_size, ntrain, step_interval):$/;"	m	class:LossHistory
__set_properties	gui/myframe.py	/^    def __set_properties(self):$/;"	m	class:MyFrame	file:
_download	utils/util.py	/^def _download(url, directory, file_name=None):$/;"	f
_progress	utils/util.py	/^        def _progress(count, block_size, total_size):$/;"	f	function:_download
aassert	utils/util.py	/^def aassert(statement, message=''): #TODO$/;"	f
accuracy	model/model.py	/^    def accuracy(self, x, y):$/;"	m	class:NET
accuracy_with_generator	model/model.py	/^    def accuracy_with_generator(self, generator, steps):$/;"	m	class:NET
app	gui/app.py	/^    app = MyApp(0)$/;"	v
app	test.py	/^    app = MyApp(0)$/;"	v	class:MyApp
appendTree	gui/myframe.py	/^    def appendTree(self, tree, parentID, childlist, model=False):$/;"	m	class:MyFrame
arg_inspection	gui/run.py	/^def arg_inspection(train, data_type, model_name, step_interval):$/;"	f
batch_size	main.py	/^           batch_size = FLAGS.max_epochs,$/;"	v
build	model/resnet.py	/^    def build(self, input_shape):$/;"	m	class:Scale
buildTree	gui/myframe.py	/^    def buildTree(self, tree, rootDir, treeRoot=None):$/;"	m	class:MyFrame
build_model	model/lstm.py	/^    def build_model(self, conf):$/;"	m	class:LSTM
build_model	model/model.py	/^    def build_model(self):$/;"	m	class:NET
build_model	model/resnet.py	/^    def build_model(self, conf):$/;"	m	class:RESNET152
build_model	model/rf.py	/^    def build_model(self, conf):$/;"	m	class:RF
build_model	model/simple.py	/^    def build_model(self, conf):$/;"	m	class:LOGISTIC
build_model	model/svm.py	/^    def build_model(self, conf):$/;"	m	class:SVM
build_model	model/vgg19.py	/^    def build_model(self, conf):$/;"	m	class:VGGNET19
call	model/resnet.py	/^    def call(self, x, mask=None):$/;"	m	class:Scale
call_cifar10	utils/data.py	/^def call_cifar10(meta=False):$/;"	f
call_iris	utils/data.py	/^def call_iris(train_ratio=0.7, meta=False):$/;"	f
call_mnist	utils/data.py	/^def call_mnist(meta=False):$/;"	f
call_wine	utils/data.py	/^def call_wine(train_ratio=0.7, meta=False):$/;"	f
child_path	Dataset/Dataset_/dist.py	/^    child_path = os.path.join(cifar_path, child)$/;"	v
childrenToList	gui/myframe.py	/^    def childrenToList(self, tree, item):$/;"	m	class:MyFrame
cifar1_path	Dataset/Dataset_/dist.py	/^cifar1_path = os.path.join(cwd, 'cifar_class')$/;"	v
cifar_path	Dataset/Dataset_/dist.py	/^cifar_path = os.path.join(cwd, 'cifar_png')$/;"	v
close	test.py	/^    def close(self,event):$/;"	m	class:MyFrameEvent
conf_mtx	model/model.py	/^def conf_mtx(y_true, y_pred, label_names=None):$/;"	f
conv_block	model/resnet.py	/^def conv_block(input_tensor, kernel_size, filters, stage, block, strides=(2, 2)):$/;"	f
count	Dataset/Dataset_/dist.py	/^count = 0$/;"	v
createDataSpecPanel	gui/mynotebook.py	/^    def createDataSpecPanel(self, parent, id):$/;"	m	class:MyNotebook
createModelSpecPanel	gui/mynotebook.py	/^    def createModelSpecPanel(self, parent, id):$/;"	m	class:MyNotebook
createTestSpecPanel	gui/mynotebook.py	/^    def createTestSpecPanel(self, parent, id):$/;"	m	class:MyNotebook
createTrainSpecPanel	gui/mynotebook.py	/^    def createTrainSpecPanel(self, parent, id):$/;"	m	class:MyNotebook
cwd	Dataset/Dataset_/dist.py	/^cwd = os.getcwd()$/;"	v
cwd	Dataset/Dataset_/txt.py	/^cwd = os.getcwd()$/;"	v
data	main.py	/^            data = np.array([image_load(img_path) for img_path in imgs_path]).astype(np.float) # (n, h, w, c)$/;"	v
data	main.py	/^            data = np.expand_dims(image_load(path), 0) # (1, h, w, c)$/;"	v
data	main.py	/^           data=data,$/;"	v
dataTreeOnActivated	gui/myframe.py	/^    def dataTreeOnActivated(self, event):$/;"	m	class:MyFrame
dataTreeOnExpand	gui/myframe.py	/^    def dataTreeOnExpand(self, event):$/;"	m	class:MyFrame
data_input	model/ops.py	/^def data_input(data, istrain, label=None):$/;"	f
data_provider	main.py	/^           data_provider=provider,$/;"	v
data_select	gui/run.py	/^def data_select(dataset, train=True):$/;"	f
dataset_name	main.py	/^           dataset_name = FLAGS.dataset,$/;"	v
dataspec	main.py	/^    dataspec = {'name' : FLAGS.dataset,$/;"	v
dir2label	model/ops.py	/^def dir2label(dataset, istrain, file_format=FILE_FORMAT):$/;"	f
epochs	main.py	/^           epochs=FLAGS.max_epochs,$/;"	v
extendTree	gui/myframe.py	/^    def extendTree(self, tree, parentID):$/;"	m	class:MyFrame
f	Dataset/Dataset_/dist.py	/^f = open(os.path.join(cifar_path, 'labels.txt'), "r")$/;"	v
file_path	Dataset/Dataset_/dist.py	/^            file_path = os.path.join(child_path, file)$/;"	v
flags	main.py	/^flags = tf.app.flags$/;"	v
flist	main.py	/^            flist = os.listdir()$/;"	v
flush	utils/util.py	/^    def flush(self):$/;"	m	class:Redirection
generate_arrays_from_file	utils/data.py	/^    def generate_arrays_from_file(self, mode, batch_size, steps, with_y=True):$/;"	m	class:DATA_PROVIDER
generate_arrays_from_mem	utils/data.py	/^    def generate_arrays_from_mem(self, mode, batch_size, steps, with_y=True):$/;"	m	class:DATA_PROVIDER
getDataDict	gui/myframe.py	/^    def getDataDict(self):$/;"	m	class:MyFrame
getDataSpec	gui/myframe.py	/^    def getDataSpec(self, dataID):$/;"	m	class:MyFrame
getDataSpec_	gui/myframe.py	/^    def getDataSpec_(self, dataID):$/;"	m	class:MyFrame
getModelSpec	gui/myframe.py	/^    def getModelSpec(self, modelID):$/;"	m	class:MyFrame
getModelSpec_	gui/myframe.py	/^    def getModelSpec_(self, modelID):$/;"	m	class:MyFrame
getModelsDict	gui/myframe.py	/^    def getModelsDict(self):$/;"	m	class:MyFrame
getRunSpec	gui/mynotebook.py	/^    def getRunSpec(self):$/;"	m	class:MyNotebook
getTestDataSpec	gui/myframe.py	/^    def getTestDataSpec(self, paths):$/;"	m	class:MyFrame
getTestSpec	gui/myframe.py	/^    def getTestSpec(self):$/;"	m	class:MyFrame
getTestSpec	gui/mynotebook.py	/^    def getTestSpec(self):$/;"	m	class:TestSpecPage
getTrainDataSpec	gui/myframe.py	/^    def getTrainDataSpec(self, dirpath):$/;"	m	class:MyFrame
getTrainSpec	gui/myframe.py	/^    def getTrainSpec(self):$/;"	m	class:MyFrame
getTrainSpec	gui/mynotebook.py	/^    def getTrainSpec(self):$/;"	m	class:TrainSpecPage
get_config	model/resnet.py	/^    def get_config(self):$/;"	m	class:Scale
get_data_list	gui/run.py	/^def get_data_list(name=None):$/;"	f
get_model_list	gui/run.py	/^def get_model_list(name=None):$/;"	f
get_optimizer_list	gui/run.py	/^def get_optimizer_list(name=None):$/;"	f
gpu_inspection	utils/util.py	/^def gpu_inspection():$/;"	f
identity_block	model/resnet.py	/^def identity_block(input_tensor, kernel_size, filters, stage, block):$/;"	f
image_load	utils/util.py	/^def image_load(file_path, resize=0):            # load image as float numpy array$/;"	f
imgs_path	main.py	/^            imgs_path = [f for f in flist if f.split('.')[-1] in ['png, jpg, jpeg']]$/;"	v
install_requires	setup.py	/^    install_requires=[$/;"	v
isDataset	gui/myframe.py	/^    def isDataset(self, item):$/;"	m	class:MyFrame
isOnTestSpec	gui/mynotebook.py	/^    def isOnTestSpec(self):$/;"	m	class:MyNotebook
isOnTrainSpec	gui/mynotebook.py	/^    def isOnTrainSpec(self):$/;"	m	class:MyNotebook
itemExist	gui/myframe.py	/^        def itemExist(tree, data, rootID):$/;"	f	function:MyFrame.buildTree
label	utils/data.py	/^    def label(self):$/;"	m	class:DATA_PROVIDER
label2txt	model/ops.py	/^def label2txt(label, txt_name, dataset, file_name=None):$/;"	f
label_path	Dataset/Dataset_/dist.py	/^                    label_path = os.path.join(cifar1_path, label)$/;"	v
label_path	Dataset/Dataset_/txt.py	/^    label_path = os.path.join(cwd, label)$/;"	v
labels	Dataset/Dataset_/dist.py	/^labels = f.read().splitlines()$/;"	v
load_model	gui/run.py	/^def load_model($/;"	f
main	Dataset/Dataset_/cifar_batch/load.py	/^def main():$/;"	f
merge_callbacks	model/model.py	/^    def merge_callbacks(self, conf):$/;"	m	class:NET
modelTreeOnActivated	gui/myframe.py	/^    def modelTreeOnActivated(self, event):$/;"	m	class:MyFrame
modelTreeOnExpand	gui/myframe.py	/^    def modelTreeOnExpand(self, event):$/;"	m	class:MyFrame
model_check	model/model.py	/^    def model_check(self):$/;"	m	class:NET
name	main.py	/^           name = FLAGS.name,$/;"	v
new_panel	test.py	/^    def new_panel(self, event):$/;"	m	class:MyFrame
ntrain	utils/data.py	/^    def ntrain(self):$/;"	m	class:DATA_PROVIDER
on_batch_end	utils/util.py	/^    def on_batch_end(self, batch, logs={}):$/;"	m	class:LossHistory
on_epoch_begin	utils/util.py	/^    def on_epoch_begin(self, epoch, logs={}):$/;"	m	class:LossHistory
on_epoch_end	utils/util.py	/^    def on_epoch_end(self, epoch, logs={}):$/;"	m	class:LossHistory
on_train_begin	utils/util.py	/^    def on_train_begin(self, logs={}):$/;"	m	class:LossHistory
on_train_end	utils/util.py	/^    def on_train_end(self, logs={}):$/;"	m	class:LossHistory
one_hot	utils/data.py	/^def one_hot(y, classes=None):$/;"	f
open_data_list	main.py	/^open_data_list = get_data_list()$/;"	v
opt	main.py	/^opt = select_optimizer(FLAGS.optimizer, FLAGS.learning_rate) if FLAGS.train else None$/;"	v
optimizer	main.py	/^           optimizer=opt,$/;"	v
packages	setup.py	/^    packages=['model', 'icons', 'utils', 'gui'],$/;"	v
path	main.py	/^    path = os.path.join('.', 'Dataset', FLAGS.dataset)$/;"	v
pickle_load	utils/util.py	/^def pickle_load(file_name):$/;"	f
pickle_save	utils/util.py	/^def pickle_save(d, file_name):$/;"	f
pngs	Dataset/Dataset_/txt.py	/^pngs = []$/;"	v
predict	model/model.py	/^    def predict(self, x):$/;"	m	class:NET
predict_with_generator	model/model.py	/^    def predict_with_generator(self, generator, steps):$/;"	m	class:NET
prog_info	model/model.py	/^    def prog_info(self):$/;"	m	class:NET
prog_info	model/rf.py	/^    def prog_info(self):$/;"	m	class:RF
prog_info	model/svm.py	/^    def prog_info(self):$/;"	m	class:SVM
python_requires	setup.py	/^    python_requires='>3')$/;"	v
refresh_trees	gui/myframe.py	/^    def refresh_trees(self):$/;"	m	class:MyFrame
report_plot	utils/util.py	/^def report_plot(data, i, model_name, log='.\/log'):$/;"	f
restore	model/model.py	/^    def restore(self):$/;"	m	class:NET
restore	model/rf.py	/^    def restore(self):$/;"	m	class:RF
restore	model/svm.py	/^    def restore(self):$/;"	m	class:SVM
run_config	main.py	/^run_config = tf.ConfigProto()$/;"	v
save	model/model.py	/^    def save(self):$/;"	m	class:NET
save	model/rf.py	/^    def save(self):$/;"	m	class:RF
save	model/svm.py	/^    def save(self):$/;"	m	class:SVM
scripts	setup.py	/^    scripts=['bin\/TensorflowGUI'],$/;"	v
select_optimizer	gui/run.py	/^def select_optimizer(optimizer='gradient', lr=1e-3):$/;"	f
setDataSpec	gui/mynotebook.py	/^    def setDataSpec(self, data_spec):$/;"	m	class:DataSpecPage
setModelSpec	gui/mynotebook.py	/^    def setModelSpec(self, model_spec):$/;"	m	class:ModelSpecPage
setTestSpec	gui/mynotebook.py	/^    def setTestSpec(self, test_spec):$/;"	m	class:TestSpecPage
setTrainSpec	gui/mynotebook.py	/^    def setTrainSpec(self, train_spec):$/;"	m	class:TrainSpecPage
setTrainSpec_checkpoint_name	gui/mynotebook.py	/^    def setTrainSpec_checkpoint_name(self):$/;"	m	class:TrainSpecPage
shuffle	utils/util.py	/^def shuffle(x, y):$/;"	f
step_interval	main.py	/^           step_interval=FLAGS.step_interval)$/;"	v
test	model/lstm.py	/^    def test(self, x, y=None):$/;"	m	class:LSTM
test	model/model.py	/^    def test(self, x, y=None, label_name=None, visualize=False):$/;"	m	class:NET
test_with_generator	model/model.py	/^    def test_with_generator(self, generator, steps, label_name=None, visualize=False):$/;"	m	class:NET
train	main.py	/^           train=FLAGS.train,$/;"	v
train	model/model.py	/^    def train(self,$/;"	m	class:NET
train	model/rf.py	/^    def train(self,$/;"	m	class:RF
train	model/svm.py	/^    def train(self,$/;"	m	class:SVM
train_with_generator	model/model.py	/^    def train_with_generator(self,$/;"	m	class:NET
train_with_provider	model/rf.py	/^    def train_with_provider(self, generator, epochs, save=True):$/;"	m	class:RF
train_with_provider	model/svm.py	/^    def train_with_provider(self, generator, epochs, save=True):$/;"	m	class:SVM
trained	model/model.py	/^    def trained(self):$/;"	m	class:NET
trained	model/rf.py	/^    def trained(self):$/;"	m	class:RF
trained	model/svm.py	/^    def trained(self):$/;"	m	class:SVM
treeOnActivated	gui/myframe.py	/^    def treeOnActivated(self, tree, OnSpecFun):$/;"	m	class:MyFrame
txt2label	model/ops.py	/^def txt2label(file_path, istrain):$/;"	f
unpickle	Dataset/Dataset_/cifar_batch/load.py	/^def unpickle(file):$/;"	f
version	setup.py	/^    version='0.1',$/;"	v
write	utils/util.py	/^    def write(self, string):$/;"	m	class:Redirection
